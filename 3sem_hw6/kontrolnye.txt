1) Специальные функции-члены класса: конструктор по умолчанию, конструктор копирования,
 деструктор, перемещающий конструктор, перемещающий оператор присваивания, оператор присваивания.
2)Правила перегрузки:
Можно перегружать:
- ->
- [](оператор доступа к контейнерам)
- ()
- +,-,*,/,%, <,>,<=,>=, ==
- <<, >>(вывод ввод в консоль)
Для них всех есть определённая сигнатура

Не нужно прегружать:
- , (с её помощью передаём аргументы в функцию, можем вызвать что-то не то)
- &&, || - "ленивые операторы", можем получить другое поведение этих операторов
 - & взятие адреса
Нельзя прегрузить
- ?: тернарный оператор
-sizeof
- ::
- . - досутп к полям структуры
- .* - взятие адреса поля структуры
3) При проектировании операторов нужно помнить о преобразованиях типов, которые могут произойти при использовании операторов, 
и о том, как они могут влиять на поведение программы. 
При перегрузке оператора приведения типа следует учитывать возможность
 неявных преобразований типов и избегать неоднозначных интерпретаций.
4) 
в стандарте C++11
основные:
lvalue(i & !m)  ///i - идентефицируемость(можно получить адрес выражения), m - перемещаемость
xvalue(свойство выражений таких,котоыре вот-вот освободят ресурс, который занимают)(i & m)
prvalue(старые rvalue из C++3 по сути)(!i & m)
обобщенные:
glvalue(global)(i)(lvalue or xvalue)
rvalue(m)(xvalue or prvalue

5) rvalue-ссылки используются для передачи временных объектов в функции или конструкторы, 
 для перемещения объектов внутри программы. 
Они позволяют избежать ненужного копирования объектов.
6) 
(копировать неудобно, тк сложность o(n) - надо потратить время на то, чтобы скопировать каждый элемент(на при
мере массива), а потом удалить то,откуда копировали)
7) std::move преобразует lvalue в rvalue
std::move всегда возвращает prvalue выражение, он не передает никакого значения, 
он навешивает ссылку 
8)работа по перемещению выполняется конструктором и оператором присваивания перемещения.
Они переносят информацию объекта в новый.
9) Компилятор не всегда умный, тк не всегда генерирует спец функции(копирование, по умолчанию) - нужно 
это делать самому(тк иначе будет поверхностное перемещение - к одной инфе доступ будет у двух объектов)
10)Можем запретить генерировать компилятору спец фунции по умолчанию - с помощью  delete и default